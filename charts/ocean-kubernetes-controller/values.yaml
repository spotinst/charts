# Default values for ocean-kubernetes-controller.

# Spot Configuration.
spotinst:
  # -- Spot Token. (Required)
  # Ref: https://docs.spot.io/administration/api/create-api-token
  token: ""
  # -- Spot Account. (Required)
  # Ref: https://docs.spot.io/administration/organizations?id=account
  account: ""
  # -- Unique identifier used by the Ocean Controller to connect (Required)
  # between the Ocean backend and the Kubernetes cluster.
  # Ref: https://docs.spot.io/ocean/tutorials/spot-kubernetes-controller/
  clusterIdentifier: ""
  # -- Base URL. (Optional)
  baseUrl: ""
  # -- Proxy URL. (Optional)
  proxyUrl: ""
  # -- Disable auto update. (Optional)
  disableAutoUpdate: false
  # -- Enable CSR approval. (Optional)
  enableCsrApproval: false

nameOverride: ""
fullnameOverride: ""

# -- Configure the amount of replicas for the controller (Optional)
replicas: 3

priorityClassName: system-cluster-critical

updateStrategy: {}
#   type: RollingUpdate
#   rollingUpdate:
#     maxSurge: 0
#     maxUnavailable: 1

image:
  repository: us-docker.pkg.dev/spotit-today/container-labs/spotinst-kubernetes-controller
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use. (Optional)
  name: "spotinst-kubernetes-cluster-controller"

secret:
  # -- Controls whether a Secret should be created. (Optional)
  create: true
  # -- Secret name. (Optional)
  name: spotinst-kubernetes-cluster-controller

# CA bundle.
# Ref: https://kubernetes.io/docs/concepts/configuration/secret/
caBundleSecret:
  create: false
  # -- Secret name. (Optional)
  name: spotinst-kubernetes-cluster-controller-ca-bundle

# Config Map.
# Ref: https://kubernetes.io/docs/concepts/configuration/configmap/
configMap:
  create: true
  # -- ConfigMap name. (Optional)
  name: spotinst-kubernetes-cluster-controller-config

podAnnotations: {}
podLabels: {}
commonLabels: {}

# Pod Security Context
# Ref: https://kubernetes.io/docs/concepts/security/pod-security-standards/
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  fsGroup: 10001

priorityClassName: system-cluster-critical

# Container Security Context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  capabilities:
    drop:
    - ALL

args: []
#  - --test

extraEnv: []
# - name: KEY
#   value: VALUE

livenessProbe:
  httpGet:
    path: /healthz
    port: readiness
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  httpGet:
    path: /readyz
    port: readiness
  initialDelaySeconds: 5
  periodSeconds: 10

service:
  type: ClusterIP
  port: 80

# Controller pod resources. (Optional)
resources: {}
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi


nodeSelector: {}

# -- Tolerations for nodes that have taints on them. (Optional)
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations:
- key: node.kubernetes.io/not-ready
  effect: NoExecute
  operator: Exists
  tolerationSeconds: 150
- key: node.kubernetes.io/unreachable
  effect: NoExecute
  operator: Exists
  tolerationSeconds: 150
- key: node-role.kubernetes.io/master
  operator: Exists
- key: node-role.kubernetes.io/control-plane
  operator: Exists

# Pod scheduling preferences.
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity:
  # -- Node affinity. (Optional)
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/os
          operator: NotIn
          values:
          - windows
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: node-role.kubernetes.io/master
          operator: Exists
  # -- Pod anti-affinity. (Optional)
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 50
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - spotinst-kubernetes-cluster-controller
        topologyKey: kubernetes.io/hostname

extraVolumeMounts: []

extraVolumes: []

topologySpreadConstraints: []

# Annotations to add to the deployment
deploymentAnnotations: {}

schedulerName: ""

# Metrics Server configuration.
metrics-server:
  # -- Specifies whether the metrics-server chart should be deployed. (Optional)
  deployChart: true

  # Overrides the image
  image:
    repository: registry.k8s.io/metrics-server/metrics-server
    tag: ""
    pullPolicy: IfNotPresent

  # -- Arguments to pass to metrics-server on start up. (Optional)
  args:
  - --logtostderr
  # enable this if you have self-signed certificates, see: https://github.com/kubernetes-incubator/metrics-server
  #  - --kubelet-insecure-tls
