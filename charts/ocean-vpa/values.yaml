# Default values for vertical-pod-autoscaler.

# imagePullSecrets -- A list of image pull secrets to be used for all pods
imagePullSecrets: []
# priorityClassName -- To set the priorityclass for all pods
priorityClassName: ""
# nameOverride -- A template override for the name
nameOverride: ""
# fullnameOverride -- A template override for the fullname
fullnameOverride: ""
# featureGates at the project level
featureGates:
  #inPlaceOrRecreate -- If True the inPlace capability is on
  inPlaceOrRecreate: true

serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created for each component
  create: true
  # serviceAccount.annotations -- Annotations to add to the service accounts for each component
  annotations: {}
  # serviceAccount.name -- The base name of the service account to use (appended with the component). If not set and create is true, a name is generated using the fullname template and appended for each component
  name: ""

updater:
  replicaCount: 1
  image:
    # updater.image.repository -- The location of the updater image
    repository: registry.k8s.io/autoscaling/vpa-updater
    # updater.image.tag -- Overrides the image tag whose default is the chart appVersion
    tag: ""
    # updater.image.pullPolicy -- The pull policy for the updater image. Recommend not changing this
    pullPolicy: Always
  evictionTolerance: 0.25
  # updater.podAnnotations -- Annotations to add to the updater pod
  podAnnotations: {}
  # updater.podLabels -- Labels to add to the updater pod
  podLabels: {}
  # updater.podSecurityContext -- The security context for the updater pod
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  # updater.resources -- The resources block for the updater pod
  resources:
    limits: {}
      # cpu: 200m
      # memory: 1000Mi
    requests:
      cpu: 50m
      memory: 500Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraArgs:
    min-replicas: 1
    v: 4
    stderrthreshold: info

admissionController:
  # admissionController.generateCertificate -- If true and admissionController is enabled, a pre-install hook will run to create the certificate for the webhook
  generateCertificate: true
  # admissionController.secretName -- Name for the TLS secret created for the webhook. Default {{ .Release.Name }}-tls-secret
  secretName: "{{ include \"ocean-vpa.fullname\" . }}-tls-secret"
  certGen:
    image:
      # admissionController.certGen.image.repository -- An image that contains certgen for creating certificates. Only used if admissionController.generateCertificate is true
      repository: registry.k8s.io/ingress-nginx/kube-webhook-certgen
      # admissionController.certGen.image.tag -- An image tag for the admissionController.certGen.image.repository image. Only used if admissionController.generateCertificate is true
      tag: v1.4.1
      # admissionController.certGen.image.pullPolicy -- The pull policy for the certgen image. Recommend not changing this
      pullPolicy: Always
    # admissionController.certGen.env -- Additional environment variables to be added to the certgen container. Format is KEY: Value format
    env: {}
    # admissionController.certGen.resources -- The resources block for the certgen pod
    resources: {}
    # admissionController.certGen.securityContext -- The securityContext block for the certgen pod
    securityContext: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

  mutatingWebhookConfiguration:
    # admissionController.mutatingWebhookConfiguration.annotations -- Additional annotations for the MutatingWebhookConfiguration. Can be used for integration with cert-manager
    annotations: {}

  replicaCount: 1
  image:
    # admissionController.image.repository -- The location of the vpa admission controller image
    repository: registry.k8s.io/autoscaling/vpa-admission-controller
    # admissionController.image.tag -- Overrides the image tag whose default is the chart appVersion
    tag: ""
    # admissionController.image.pullPolicy -- The pull policy for the admission controller image. Recommend not changing this
    pullPolicy: Always
  # admissionController.podAnnotations -- Annotations to add to the admission controller pod
  podAnnotations: {}
  # admissionController.podLabels -- Labels to add to the admission controller pod
  podLabels: {}
  # admissionController.podSecurityContext -- The security context for the admission controller pod
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  # admissionController.resources -- The resources block for the admission controller pod
  resources:
    limits: {}
      # cpu: 200m
      # memory: 500Mi
    requests:
      cpu: 50m
      memory: 200Mi
  # admissionController.tlsSecretKeys -- The keys in the vpa-tls-certs secret to map in to the admission controller
  tlsSecretKeys: []
    # - key: ca.crt
    #   path: caCert.pem
    # - key: tls.crt
    #   path: serverCert.pem
    # - key: tls.key
    #   path: serverKey.pem
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraArgs:
    v: 4
    stderrthreshold: info
  # admissionController.httpPort -- Port of the admission controller for the mutating webhooks
  httpPort: 8000
